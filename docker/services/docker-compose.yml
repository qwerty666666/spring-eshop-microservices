#
# This file is used for local development.
# Unlike ./docker-compose.prod.yml it exposes ports to localhost
# and doesn't include microservice containers (supposed that
# microservices will be run as local jars and not as docker
# containers during development).
#

version: "3.9"

services:
  postgres:
    container_name: eshop-postgres
    image: postgres:14
    healthcheck:
      test: "pg_isready"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
#    volumes:
#      - ./postgres/data:/var/lib/postgresql/data
    user: ${POSTGRES_UID}:${POSTGRES_GID}
    networks:
      - app-tier

  zookeeper:
    image: bitnami/zookeeper:3
    container_name: eshop-zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-tier

  kafka:
    image: bitnami/kafka:3
    container_name: eshop-kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: PLAINTEXT_HOST://:9092,PLAINTEXT://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - app-tier

  keycloak:
    image: jboss/keycloak:16.1.1
    container_name: eshop-keycloak
    healthcheck:
      test: "curl -sf ${IDP_URL} || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 50
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres:5432
      DB_USER: ${POSTGRES_USER:-admin}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      DB_SCHEMA: public
      DB_DATABASE: keycloak
      KEYCLOAK_USER: ${KEYCLOACK_USER:-admin}
      KEYCLOAK_PASSWORD: ${KEYACLOCK_PASSWORD:-admin}
    ports:
      - "28000:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-tier

  redis:
    image: redis:7.0.0
    container_name: eshop-redis
    ports:
      - "6379:6379"
    networks:
      - app-tier

networks:
  app-tier:
    name: eshop-app-tier
    driver: bridge
