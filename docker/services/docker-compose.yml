#
# The file contains all microservice containers and infrastructure services.
#

version: "3.9"

services:
  postgres:
    container_name: eshop-postgres
    image: postgres:14
    healthcheck:
      test: "pg_isready"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
#    volumes:
#      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - app-tier

  zookeeper:
    image: bitnami/zookeeper:3
    container_name: eshop-zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-tier

  kafka:
    image: bitnami/kafka:3
    container_name: eshop-kafka
    environment:
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: PLAINTEXT_HOST://:9092,PLAINTEXT://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT_HOST://kafka:9092,PLAINTEXT://kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - app-tier

  keycloak:
    image: jboss/keycloak:16.1.1
    container_name: eshop-keycloak
    healthcheck:
      test: "curl -sf ${IDP_URL} || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 50
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres:5432
      DB_USER: ${POSTGRES_USER:-admin}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      DB_SCHEMA: public
      DB_DATABASE: keycloak
      KEYCLOAK_USER: ${KEYCLOACK_USER:-admin}
      KEYCLOAK_PASSWORD: ${KEYACLOCK_PASSWORD:-admin}
    ports:
      - "28000:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-tier


  # Services


  config-server:
    image: app-eshop/config-server
    container_name: eshop-config-server
    healthcheck:
      test: "curl -sf localhost:8888/actuator/health | grep UP || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - SERVICE_DISCOVERY_URL
      - KAFKA_BOOTSTRAP_SERVERS
      - IDP_URL
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - LOGSTASH_HOST
      - LOGSTASH_PORT
    depends_on:
      - kafka
    networks:
      - app-tier

  eureka:
    image: app-eshop/eureka-server
    container_name: eshop-eureka
    healthcheck:
      test: "curl -sf localhost:8761/actuator/health | grep UP || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "8761:8761"
    environment:
      - SPRING_CONFIG_IMPORT=${CONFIG_SERVER_URL:-localhost:8888}
      - KAFKA_BOOTSTRAP_SERVERS
      - LOGSTASH_HOST
      - LOGSTASH_PORT
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - app-tier

  gateway:
    image: app-eshop/api-gateway
    container_name: eshop-gateway
    healthcheck:
      test: "curl -sf localhost:8080/actuator/health | grep UP || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "8080:8080"
    environment:
      - SPRING_CONFIG_IMPORT=${CONFIG_SERVER_URL:-localhost:8888}
      - SERVICE_DISCOVERY_URL
      - IDP_URL
      - KAFKA_BOOTSTRAP_SERVERS
      - LOGSTASH_HOST
      - LOGSTASH_PORT
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - app-tier

  catalog-service:
    image: app-eshop/catalog-server
    container_name: eshop-catalog-service
    healthcheck:
      test: "curl -sf localhost:8080/actuator/health | grep UP || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - SPRING_CONFIG_IMPORT=${CONFIG_SERVER_URL:-localhost:8888}
      - SPRING_PROFILES_ACTIVE
      - SERVICE_DISCOVERY_URL
      - KAFKA_BOOTSTRAP_SERVERS
      - IDP_URL
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - LOGSTASH_HOST
      - LOGSTASH_PORT
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-tier

  checkout-service:
    image: app-eshop/checkout-server
    container_name: eshop-checkout-service
    healthcheck:
      test: "curl -sf localhost:8080/actuator/health | grep UP || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - SPRING_CONFIG_IMPORT=${CONFIG_SERVER_URL:-localhost:8888}
      - SPRING_PROFILES_ACTIVE
      - SERVICE_DISCOVERY_URL
      - KAFKA_BOOTSTRAP_SERVERS
      - IDP_URL
      - LOGSTASH_HOST
      - LOGSTASH_PORT
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
    networks:
      - app-tier

  message-relay-service:
    image: app-eshop/message-relay-service
    container_name: eshop-message-relay-service
    healthcheck:
      test: "curl -sf localhost:8080/actuator/health | grep UP || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - SPRING_CONFIG_IMPORT=${CONFIG_SERVER_URL:-localhost:8888}
      - SPRING_PROFILES_ACTIVE
      - SERVICE_DISCOVERY_URL
      - KAFKA_BOOTSTRAP_SERVERS
      - IDP_URL
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - LOGSTASH_HOST
      - LOGSTASH_PORT
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
    networks:
      - app-tier

  order-management-service:
    image: app-eshop/order-management-server
    container_name: eshop-order-management-service
    healthcheck:
      test: "curl -sf localhost:8080/actuator/health | grep UP || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - SPRING_CONFIG_IMPORT=${CONFIG_SERVER_URL:-localhost:8888}
      - SPRING_PROFILES_ACTIVE
      - SERVICE_DISCOVERY_URL
      - KAFKA_BOOTSTRAP_SERVERS
      - IDP_URL
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - LOGSTASH_HOST
      - LOGSTASH_PORT
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-tier

  shopping-cart-service:
    image: app-eshop/shopping-cart-server
    container_name: eshop-shopping-cart-service
    healthcheck:
      test: "curl -sf localhost:8080/actuator/health | grep UP || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - SPRING_CONFIG_IMPORT=${CONFIG_SERVER_URL:-localhost:8888}
      - SPRING_PROFILES_ACTIVE
      - SERVICE_DISCOVERY_URL
      - KAFKA_BOOTSTRAP_SERVERS
      - IDP_URL
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - LOGSTASH_HOST
      - LOGSTASH_PORT
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-tier

  warehouse-service:
    image: app-eshop/warehouse-server
    container_name: eshop-warehouse-service
    healthcheck:
      test: "curl -sf localhost:8080/actuator/health | grep UP || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 20
    environment:
      - SPRING_CONFIG_IMPORT=${CONFIG_SERVER_URL:-localhost:8888}
      - SPRING_PROFILES_ACTIVE
      - SERVICE_DISCOVERY_URL
      - KAFKA_BOOTSTRAP_SERVERS
      - IDP_URL
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - LOGSTASH_HOST
      - LOGSTASH_PORT
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-tier

networks:
  app-tier:
    name: eshop-app-tier
    driver: bridge
