spring.application.name: warehouse-service

---

spring.config.activate.on-profile: "!test"

# Load configs from Config Server for non-test environments

# Note: If we use "spring.config.import" in "application.yml" then
# "spring.config.import" environment contributor will be added to
# children of "application.yml" environment contributor. And it means
# that profile-aware environment resolver
# (ConfigDataLocationResolver#resolveProfileSpecific) will be called
# first for "spring.config.import" and only after that for
# "application-{profile}.yml", i.e. config server data will be loaded
# before "application-test.yml" is loaded. And therefore we can't
# disable config server for tests in profile specific yml file.
# To overcome that issue we can use "spring.config.activate.on-profile"
# and enable config server only for specific environments instead of
# disabling it for test env.

spring:
  config:
    import: configserver:http://localhost:8888

  cloud:
    config:
      fail-fast: true
      retry:
        max-attempts: 5

---

spring.config.activate.on-profile: test-data

spring:
  sql:
    init:
      mode: always
      data-locations: classpath:/test-data/data-dev-postgres.sql
      # It is ScriptUtils.EOF_STATEMENT_SEPARATOR constant.
      # This constant defines that init sql script should not be split into multiple statements.
      # We use it because Spring fails with handle ';' in Stored Procedures.
      # See SPR-15438 https://github.com/spring-projects/spring-framework/issues/19999
      separator: ^^^ END OF SCRIPT ^^^